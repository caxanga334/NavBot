# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os, sys

projectName = 'navbot'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',
#  'smsdk_ext.cpp', # not needed anymore, TO-DO: for 1.12, 1.11 might still need it
  'manager.cpp',
  'extplayer.cpp',
  'core/eventmanager.cpp',
  'sdkports/sdk_timers.cpp',
  'sdkports/debugoverlay_shared.cpp',
  'sdkports/studio.cpp',
  'sdkports/gametrace_server.cpp',
  'entities/baseentity.cpp',
  'entities/basecombatchar.cpp',
  'mods/basemod.cpp',
  'mods/basemod_gameevents.cpp',
  'navmesh/nav_area.cpp',
  'navmesh/nav_colors.cpp',
  'navmesh/nav_edit.cpp',
  'navmesh/nav_entities.cpp',
  'navmesh/nav_file.cpp',
  'navmesh/nav_generate.cpp',
  'navmesh/nav_ladder.cpp',
  'navmesh/nav_merge.cpp',
  'navmesh/nav_mesh.cpp',
  'navmesh/nav_node.cpp',
  'navmesh/nav_simplify.cpp',
  'util/BaseEntity.cpp',
  'util/EntityUtils.cpp',
  'util/Handle.cpp',
  'util/SimpleException.cpp',
  'util/UtilTrace.cpp',
  'util/entprops.cpp',
  'util/helpers.cpp',
  'util/librandom.cpp',
  'util/prediction.cpp',
  # Base Bot stuff
  'bot/interfaces/base_interface.cpp',
  'bot/interfaces/behavior.cpp',
  'bot/interfaces/playercontrol.cpp',
  'bot/interfaces/movement.cpp',
  'bot/interfaces/sensor.cpp',
  'bot/interfaces/knownentity.cpp',
  'bot/interfaces/profile.cpp',
  'bot/interfaces/weaponinfo.cpp',
  'bot/interfaces/path/basepath.cpp',
  'bot/interfaces/path/meshnavigator.cpp',
  'bot/basebot.cpp',
  'bot/basebot_debug.cpp',
  'concommands_bots.cpp',
  # TF2 Bot
  'bot/tf2/tf2bot.cpp',
  'bot/tf2/tf2bot_behavior.cpp',
  'bot/tf2/tf2bot_controller.cpp',
  'bot/tf2/tf2bot_movement.cpp',
  'bot/tf2/tf2bot_sensor.cpp',
  'bot/tf2/tasks/tf2bot_maintask.cpp',
  'bot/tf2/tasks/tf2bot_tactical.cpp',
  'bot/tf2/tasks/tf2bot_scenario.cpp',
  'mods/tf2/teamfortress2mod.cpp',
  'mods/tf2/tf2lib.cpp',
  'mods/tf2/tf2mod_gameevents.cpp',
  'mods/tf2/tf2_class_selection.cpp',
  'mods/tf2/nav/tfnavarea.cpp',
  'mods/tf2/nav/tfnavmesh.cpp',
  'mods/tf2/nav/tfnav_edit.cpp',
  # DoD:S Bot
  'mods/dods/dayofdefeatsourcemod.cpp',
]

project = builder.LibraryProject(EXT.my_name + '.ext')
project.sources += sourceFiles

if os.path.isfile(os.path.join(builder.currentSourcePath, 'sdk', 'smsdk_ext.cpp')):
  # Use the copy included in the project
  project.sources += [os.path.join('sdk', 'smsdk_ext.cpp')]
else:
  # Use the copy included with SM 1.6 and newer
  project.sources += [os.path.join(EXT.sm_root, 'public', 'smsdk_ext.cpp')]

for sdk_name in EXT.sdks:
  sdk = EXT.sdks[sdk_name]
  if sdk['name'] in ['mock']:
    continue

  for cxx in builder.targets:
    if not cxx.target.arch in sdk['platforms'][cxx.target.platform]:
      continue

    binary = EXT.HL2ExtConfig(project, builder, cxx, EXT.my_name + '.ext.' + sdk['extension'], sdk)

    if binary.compiler.behavior == 'gcc':
      binary.compiler.cxxflags += ['-Wno-invalid-offsetof', '-Wno-reorder-ctor', '-Wno-varargs']

EXT.extensions += builder.Add(project)
