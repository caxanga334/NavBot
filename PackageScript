# vim: set ts=8 sts=2 sw=2 tw=99 et ft=python:
import os

# This is where the files will be output to
# package is the default
builder.SetBuildFolder('package')

# Add any folders you need to this list
folder_list = [
  'addons/sourcemod/extensions',
  'addons/sourcemod/scripting',
  'addons/sourcemod/scripting/include',
  'addons/sourcemod/scripting/include/navbot',
  'addons/sourcemod/scripting/include/navbot/interfaces',
  'addons/sourcemod/gamedata/navbot.games',
  'addons/sourcemod/configs/navbot',
  'addons/sourcemod/configs/navbot/tf',
  'addons/sourcemod/configs/navbot/bms',
  'addons/sourcemod/configs/navbot/dod',
  'addons/sourcemod/configs/navbot/zps',
  'addons/sourcemod/data/',
  'addons/sourcemod/data/navbot',
]

if 'x86_64' in Extension.target_archs:
  folder_list.extend([
    'addons/sourcemod/extensions/x64',
  ])

# Create the distribution folder hierarchy.
folder_map = {}
for folder in folder_list:
  norm_folder = os.path.normpath(folder)
  folder_map[folder] = builder.AddFolder(norm_folder)

# Do all straight-up file copies from the source tree.
def CopyFiles(src, dest, files):
  if not dest:
    dest = src
  dest_entry = folder_map[dest]
  for source_file in files:
    source_path = os.path.join(builder.sourcePath, src, source_file)
    builder.AddCopy(source_path, dest_entry)

# plugin sources
CopyFiles('scripting', 'addons/sourcemod/scripting',
  [ 
    'navbot_admin.sp',
    'navbot_example.sp',
  ]
)

# Include files 
CopyFiles('scripting/include', 'addons/sourcemod/scripting/include',
  [ 
    'navbot.inc',
  ]
)

CopyFiles('scripting/include/navbot', 'addons/sourcemod/scripting/include/navbot',
  [ 
    'bots.inc',
  ]
)

CopyFiles('scripting/include/navbot/interfaces', 'addons/sourcemod/scripting/include/navbot/interfaces',
  [ 
    'path.inc',
  ]
)

# GameData files
CopyFiles('gamedata/navbot.games', 'addons/sourcemod/gamedata/navbot.games',
  [ 
    'common.games.txt',
    'game.bms.txt',
    'game.cstrike.txt',
    'game.dod.txt',
    'game.hl2mp.txt',
    'game.hl1mp.txt',
    'game.tf.txt',
    'game.zps.txt',
    'master.games.txt'
  ]
)

# Config Files
CopyFiles('configs', 'addons/sourcemod/configs/navbot',
  [ 
    'bot_difficulty.cfg',
    'bot_names.cfg.example',
    'settings.example.cfg',
  ]
)

CopyFiles('configs/tf', 'addons/sourcemod/configs/navbot/tf',
  [ 
    'class_selection.cfg',
    'mvm_upgrades.cfg',
    'weapons.cfg'
  ]
)

CopyFiles('configs/bms', 'addons/sourcemod/configs/navbot/bms',
  [ 
    'weapons.cfg',
    'player_models.ini'
  ]
)

CopyFiles('configs/dod', 'addons/sourcemod/configs/navbot/dod',
  [ 
    'weapons.cfg'
  ]
)

CopyFiles('configs/zps', 'addons/sourcemod/configs/navbot/zps',
  [ 
    'weapons.cfg'
  ]
)

CopyFiles('data', 'addons/sourcemod/data/navbot',
  [ 
    'nav_places.cfg'
  ]
)

CopyFiles('extension', 'addons/sourcemod/extensions',
  [ 
    'navbot.autoload'
  ]
)

# Copy binaries.
for cxx_task in Extension.extensions:
  if cxx_task.target.arch == 'x86_64':
    builder.AddCopy(cxx_task.binary, folder_map['addons/sourcemod/extensions/x64'])
  else:
    builder.AddCopy(cxx_task.binary, folder_map['addons/sourcemod/extensions'])
